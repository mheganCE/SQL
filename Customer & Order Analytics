/* In this SQL, I'm querying data from a multiple tables to assess customer data and product orders.

-- displays JanSales filtered out the blank and incorrect order ID
SELECT * 
FROM BIT_DB.JanSales 
WHERE orderID <> "Order ID"

-- 1. How many orders were placed in January?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales 
WHERE orderID <> "Order ID" 
AND length(orderID) = 6

--- 2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE Product ="iPhone" 
AND orderID <> "Order ID"

--- 3. Select the customer account numbers for all the orders that were placed in February. 
SELECT cust.acctnum 
FROM BIT_DB.customers cust
LEFT JOIN BIT_DB.FebSales Feb
ON cust.order_id=Feb.orderID
WHERE cust.order_id <> "Order ID" AND length(orderID) = 6

--- 4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, MIN(Price) 
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price ASC LIMIT 1

--- 5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and 
       the price of the products).
SELECT  product, SUM(Quantity*price) as revenue 
FROM BIT_DB.JanSales 
WHERE orderID <> "Order ID" 
GROUP BY Product

--- 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Sum(Quantity) as total_sold, SUM(Quantity*Price) as revenue 
FROM BIT_DB.FebSales 
WHERE location="548 Lincoln St, Seattle, WA 98101" 
GROUP BY Product

--- 7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? 
SELECT COUNT(cust.acctnum), AVG(quantity*price) as avg 
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers cust
ON order_id=orderID
WHERE quantity > 2 AND orderID <> "Order id" AND length(orderID) = 6

--- 8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct Product, SUM(Quantity)
FROM BIT_DB.FebSales 
WHERE location like '%Los Angeles%'
GROUP BY Product

--- 9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT distinct location, COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE location like '%New York%'
AND orderID <> 'Order ID' 
AND length(orderID)=6
GROUP BY location
HAVING COUNT(orderID) >2

--- 10. How many of each type of headphone were sold in February?
SELECT distinct Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
GROUP BY Product

--- 11. What was the average amount spent per account in February?
SELECT SUM(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

--- 12. What was the average quantity of products purchased per account in February? 
SELECT SUM(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

--- 13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(quantity*price)
FROM BIT_DB.JanSales
GROUP BY Product 
ORDER BY SUM(quantity*price) desc LIMIT 1
